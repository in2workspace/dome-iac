version: '3.3'
services:

  issuer-keycloak:
    image: in2workspace/issuer-keycloak-plugin:v1.1.0-SNAPSHOT
    volumes:
      - ./imports:/opt/keycloak/data/import
    command:
#      - 'start-dev'
#      - '-Djgroups.dns.query=keycloak'
#      - '--import-realm'
    environment:
      KEYCLOAK_ADMIN: in2admin
      KEYCLOAK_ADMIN_PASSWORD: in2pass
      KC_HOSTNAME_URL: http://localhost:8088
      KC_HOSTNAME_ADMIN_URL: http://localhost:8088
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://local-postgres/keycloak
      KC_DB_USERNAME: in2admin
      KC_DB_PASSWORD: in2pass
      DB_PORT: 5432
      ISSUER_API_URL: http://credential-issuer:8071
      PRE_AUTH_LIFESPAN: 10
      PRE_AUTH_LIFESPAN_TIME_UNIT: MINUTES
      TX_CODE_SIZE: 4
      TX_CODE_DESCRIPTION: Enter the PIN code
      TOKEN_EXPIRATION: 2592000
    ports:
      - '8088:8080'
    links:
      - local-postgres
    networks:
      - shared-network

  local-postgres:
    image: postgres:latest
    volumes:
      - IN2_DOME_POSTGRES:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: in2admin
      POSTGRES_PASSWORD: in2pass
    ports:
      - '5432:5432'
    restart: unless-stopped
    networks:
      - shared-network

  issuer-postgres:
    image: postgres:latest
    volumes:
      - IN2_DOME_POSTGRES:/var/lib/postgresql/data2
    environment:
      POSTGRES_DB: issuer
      POSTGRES_USER: in2admin
      POSTGRES_PASSWORD: in2pass
    ports:
      - '5434:5432'
    restart: unless-stopped
    networks:
      - shared-network

  issuer-driving-application:
    image: in2workspace/credential-issuer-ui:v1.1.0-SNAPSHOT
    ports:
      - "4201:8088"
    networks:
      - shared-network

  credential-issuer:
    image: in2workspace/issuer-api:v0.5.0-SNAPSHOT
    depends_on:
      - issuer-postgres
    environment:
      APP_CONFIGS_IAM_EXTERNAL_DOMAIN: "http://issuer-keycloak:8080"
      APP_CONFIGS_IAM_INTERNAL_DOMAIN: "http://issuer-keycloak:8080"
      APP_CONFIGS_ISSUER_EXTERNAL_DOMAIN: "http://credential-issuer:8071"
      APP_CONFIGS_AUTHENTIC_SOURCES_DOMAIN: "http://localhost:8072"
      APP_CONFIGS_KEY_VAULT_DOMAIN: "http://localhost:8081"
      APP_CONFIGS_REMOTE_SIGNATURE_DOMAIN: "http://host.docker.internal:8050"
      APP_CONFIGS_ISSUER_DID: "did:key:z6MkqmaCT2JqdUtLeKah7tEVfNXtDXtQyj4yxEgV11Y5CqUa"
      APP_CONFIGS_JWT_DECODER_PATH: "/realms/CredentialIssuer/protocol/openid-connect/certs"
      APP_CONFIGS_JWT_DECODER_LOCAL_PATH: "/realms/CredentialIssuer"
      APP_CONFIGS_JWT_VALIDATOR: "http://localhost:8088/realms/CredentialIssuer"
      APP_CONFIGS_PRE_AUTH_CODE_URI_TEMPLATE: "/realms/CredentialIssuer/verifiable-credential/{{did}}/credential-offer"
      APP_CONFIGS_TOKEN_URI_TEMPLATE: "/realms/CredentialIssuer/verifiable-credential/{{did}}/token"
      SPRING_MAIL_HOST: host.docker.internal
      SPRING_MAIL_PORT: 1025
      SPRING_MAIL_USERNAME:
      SPRING_MAIL_PASSWORD:
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH: "false"
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE: "false"
      SPRING_R2DBC_URL: "r2dbc:postgresql://issuer-postgres:5432/issuer"
      SPRING_R2DBC_USERNAME: "in2admin"
      SPRING_R2DBC_PASSWORD: "in2pass"
      SPRING_FLYWAY_URL: "jdbc:postgresql://issuer-postgres:5432/issuer"
      SPRING_FLYWAY_LOCATIONS: "classpath:db/migration"
    ports:
      - "8071:8071"
    links:
      - issuer-postgres
    networks:
      - shared-network

volumes:
  IN2_DOME_POSTGRES:
networks:
  shared-network:
    external: true