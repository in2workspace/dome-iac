version: "3.8"
services:
  wallet-driving-application:
    container_name: wallet-driving-application
    image: in2kizuna/wallet-driving-application:v1.1.0-SNAPSHOT
    ports:
      - "4200:4203"
    networks:
      local_network:

  wallet-creation-application:
    container_name: wallet-creation-application
    image: in2kizuna/wallet-creation-application:v2.0.0-SNAPSHOT
    environment:
      LOGGING_LEVEL_ES_IN2_WCA: "DEBUG"
      SERVER_PORT: "8087"
      OPENAPI_SERVER_URL: "http://wallet-creation-application:8087"
      WALLET-DATA_URL: "http://wallet-data:8086"
      WALLET-WDA_URL: "http://localhost:4200"        
    command:
      - run
    ports:
      - "8087:8087"
    networks:
      local_network:

  wallet-identity-provider:
    container_name: wallet-identity-provider
    image: quay.io/keycloak/keycloak:latest
    ports:
      - '8084:8084'
    command:
      - 'start-dev'
      - '--import-realm'
    environment:
      KEYCLOAK_ADMIN: "admin"
      KEYCLOAK_ADMIN_PASSWORD: "1234"
      KC_HTTP_PORT: "8084"
      KC_DB: "postgres"
      KC_DB_URL: "jdbc:postgresql://postgres/keycloak"
      KC_DB_URL_PORT: "5433"
      KC_DB_USERNAME: "user"
      KC_DB_PASSWORD: "1234"
    volumes:
      - ./identity-service/imports:/opt/keycloak/data/import
    links:
      - postgres
    networks:
      local_network:

  postgres:
    container_name: postgres
    image: postgres:latest
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: "keycloak"
      POSTGRES_USER: "user"
      POSTGRES_PASSWORD: "1234"
    ports:
      - '5433:5432'
    restart: unless-stopped
    networks:
      local_network:

  wallet-user-registry:
    container_name: wallet-user-registry
    image: in2kizuna/wallet-user-registry:v2.0.0-SNAPSHOT
    environment:
      LOGGING_LEVEL_ES_IN2_WALLETUSERREGISTRY: "DEBUG"
      SERVER_PORT: "8085"
      OPENAPI_SERVER_URL: "http://wallet-user-registry:8085"
      WALLET-DATA_URL: "http://wallet-data:8086"
      WALLET-WDA_URL: "http://localhost:4200"
      KEYCLOAK_URL: "http://wallet-identity-provider:8084"
      KEYCLOAK_REALM: "WalletIdP"
      KEYCLOAK_CLIENT-SECRET: "fV51P8jFBo8VnFKMMuP3imw3H3i5mNck"
      KEYCLOAK_CLIENT-ID: "user-registry-client"
    command:
      - run
    ports:
      - "8085:8085"
    networks:
      local_network:

  wallet-data:
    container_name: wallet-data
    image: in2kizuna/wallet-data:v2.0.0-SNAPSHOT
    environment:
      LOGGING_LEVEL_ES_IN2_WALLET_DATA_API_SERVICE: "DEBUG"
      SERVER_PORT: "8086"
      OPENAPI_SERVER_URL: "http://wallet-data:8086"
      BROKER-ADAPTER_URL: "http://broker-adapter:8080"
      WALLET-CRYPTO_URL: "http://wallet-crypto:8081"
      WALLET-WDA_URL: "http://localhost:4200"
    command: 
      - run
    ports:
      - "8086:8086"
    links:
      - broker-adapter
    networks:
      local_network:

  broker-adapter:
    container_name: broker-adapter
    image: in2kizuna/broker-adapter:v2.0.0-SNAPSHOT
    environment:
      - "LOGGING_LEVEL_ES_IN2_BROKERADAPTER=DEBUG"
      - "BROKER_EXTERNAL_DOMAIN=https://example.com/scorpio"
      - "BROKER_INTERNAL_DOMAIN=http://scorpio:9090"
      - "BROKER_PATHS_ENTITIES=/ngsi-ld/v1/entities"
      - "APP_CONTEXTENABLED=false"
    ports:
      - "8080:8080"
    networks:
      local_network:
    depends_on:
      - scorpio

  scorpio:
    image: scorpiobroker/all-in-one-runner:java-kafka-latest
    ports:
      - "9090:9090"
    environment:
      DBHOST: scorpio-postgres
      BUSHOST: kafka
    networks:
      local_network:
    depends_on:
      - scorpio-postgres
      - kafka

  kafka:
    image: bitnami/kafka:3.5.1-debian-11-r6
    ports:
      - "9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_LOG_RETENTION_MS: 10000
      KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: 5000
      ALLOW_PLAINTEXT_LISTENER: "yes"
    volumes:
      - kafka:/var/run/docker.sock
    depends_on:
      - zookeeper
    logging:
      driver: none
    networks:
      local_network:

  scorpio-postgres:
    image: postgis/postgis
    ports:
      - "5434"
    environment:
      POSTGRES_USER: ngb
      POSTGRES_PASSWORD: ngb
      POSTGRES_DB: ngb
    logging:
      driver: none
    networks:
      local_network:
    volumes:
      - postgis-data:/var/lib/postgresql/data

  zookeeper:
    image: zookeeper
    ports:
      - "2181"
    logging:
      driver: none
    volumes:
      - zookeeper-data:/data
      - zookeeper-datalog:/datalog
      - zookeeper-logs:/logs
  
  wallet-crypto:
    container_name: wallet-crypto
    image: in2kizuna/wallet-crypto:v2.0.0-SNAPSHOT
    environment:
      LOGGING_LEVEL_ES_IN2_WALLET_CRYPTO: "DEBUG"
      SERVER_PORT: "8081"
      OPENAPI_SERVER_URL: "http://wallet-crypto:8081"
      WALLET_DATA_URL: "http://wallet-data:8086/api/dids"
      SPRING_CLOUD_VAULT_AUTHENTICATION: "token"
      SPRING_CLOUD_VAULT_TOKEN: "hvs.PQ4jQzXeW4wzslbYKMWwimFY"
      SPRING_CLOUD_VAULT_HOST: "vault"
      SPRING_CLOUD_VAULT_SCHEME: "http"
      SPRING_CLOUD_VAULT_PORT: "8201"
      SPRING_CLOUD_VAULT_KV_ENABLED: "true"
      APP_SECRETPROVIDER_NAME: "hashicorp"
      SPRING_AZURE_KEYVAULT_SECRET_ENDPOINT: "exmaple"
      SPRING_AZURE_APPCONFIGURATION_ENDPOINT: "example"
    command:
      - run
    ports:
      - "8081:8081"
    networks:
      local_network:

  vault:
    image: hashicorp/vault:latest
    container_name: vault
    ports:
      - "8201:8201"
    volumes:
      - VAULT_LOGS:/vault/logs
      - VAULT_FILE:/vault/file
      - ./vault/init.sh:/vault/init.sh
      - ./vault/config.json:/vault/config/config.json
    cap_add:
      - IPC_LOCK
    command: /bin/sh /vault/init.sh
    networks:
      local_network:

networks:
  local_network:

volumes:
  zookeeper-data:
  zookeeper-datalog:
  zookeeper-logs:
  postgres-data:
  postgis-data:
  kafka:
  VAULT_LOGS:
  VAULT_FILE: