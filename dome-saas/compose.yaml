services:

# ::::::::::::::::::::::::: NGINX :::::::::::::::::::::::::

  nginx:
    image: nginx:latest
    environment:
      VIRTUAL_PORT: 80
      VIRTUAL_HOST: dome.saas.local
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ../dome-saas/nginx.conf:/etc/nginx/nginx.conf
      - ../dome-saas/certs:/etc/nginx/certs
      - ../dome-saas/html:/usr/share/nginx/html
    networks:
      dome-saas-network:
        ipv4_address: 172.23.0.100

  alpine:
    image: alpine:latest
    command: [ "sh", "-c", "apk add curl & echo '172.23.0.100 dome.saas.local' >> /etc/hosts & while true; do sleep 1000; done" ]
    tty: true
    networks:
      - dome-saas-network

# ::::::::::::::::::::::::: ISSUER :::::::::::::::::::::::::

  issuer-keycloak:
    image: in2workspace/issuer-keycloak-plugin:v1.1.0-SNAPSHOT
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_HOSTNAME_URL: http://localhost:8081
      KC_HOSTNAME_ADMIN_URL: http://localhost:8081
      KC_HTTPS_CERTIFICATE_KEY_FILE: /opt/keycloak/conf/server.key.pem
      KC_HTTPS_CERTIFICATE_FILE: /opt/keycloak/conf/server.crt.pem
      KC_HTTPS_TRUST_STORE_FILE: /opt/keycloak/conf/truststore.jks
      KC_HTTPS_TRUST_STORE_PASSWORD: pempas
      KC_HTTPS_CLIENT_AUTH: request # ?? required
      KC_DB: postgres
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: postgres
      KC_DB_URL: jdbc:postgresql://issuer-keycloak-postgres/cred
      DB_PORT: 5432
#      KC_INTERNAL_URL: http://issuer-keycloak:8080
#      KC_EXTERNAL_URL: http://localhost:8081
      ISSUER_API_URL: http://issuer-api:8080
      # ISSUER_API_URL: http://host.docker.internal:8082
      # ISSUER_API_EXTERNAL_URL: http://localhost
      ISSUER_API_EXTERNAL_URL: http://dome.saas.local
      PRE_AUTH_LIFESPAN: 10 # required?
      PRE_AUTH_LIFESPAN_TIME_UNIT: MINUTES # required?
      TX_CODE_SIZE: 4 # required?
      TX_CODE_DESCRIPTION: Enter the PIN code # required?
      TOKEN_EXPIRATION: 2592000 # required?
    ports:
      - "8081:8080"
    extra_hosts:
      - "dome.saas.local:172.23.0.100"
    volumes:
      - ./certs/server.key:/opt/keycloak/conf/server.key.pem
      - ./certs/server.crt:/opt/keycloak/conf/server.crt.pem
      - ./certs/truststore.jks:/opt/keycloak/conf/truststore.jks
    networks:
      - dome-saas-network

  issuer-keycloak-postgres:
    image: postgres:latest
    restart: unless-stopped
    environment:
      POSTGRES_DB: cred
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/issuer-keycloak-data
    extra_hosts:
      - "dome.saas.local:172.23.0.100"
    networks:
      - dome-saas-network

  issuer-ui:
    image: in2workspace/credential-issuer-ui:v1.1.0-SNAPSHOT
    ports:
      - "4201:8080"
    extra_hosts:
      - "dome.saas.local:172.23.0.100"
    networks:
      - dome-saas-network

  issuer-api:
    image: in2workspace/issuer-api:v0.6.0-SNAPSHOT
    environment:
      SPRING_ACTIVE_PROFILES: default
      SPRING_R2DBC_URL: r2dbc:postgresql://issuer-postgres:5432/issuer
      SPRING_R2DBC_USERNAME: postgres
      SPRING_R2DBC_PASSWORD: postgres
      SPRING_FLYWAY_URL: jdbc:postgresql://issuer-postgres:5432/issuer
      SPRING_MAIL_HOST: host.docker.internal
      SPRING_MAIL_PORT: 1025
      API_EXTERNAL_DOMAIN: http://dome.saas.local
      API_INTERNAL_DOMAIN: http://issuer-api:8080
      API_CONFIG_SOURCE: yaml
      API_CACHE_LIFETIME_CREDENTIAL_OFFER: 10
      API_CACHE_LIFETIME_VERIFIABLE_CREDENTIAL: 10
      AUTH_SERVER_PROVIDER: keycloak
      AUTH_SERVER_EXTERNAL_DOMAIN: http://localhost:8081
      AUTH_SERVER_INTERNAL_DOMAIN: http://issuer-keycloak:8080
      AUTH_SERVER_REALM: CredentialIssuer
      AUTH_SERVER_CLIENT_CLIENT_ID: oidc4vci-wallet-client
      AUTH_SERVER_CLIENT_CLIENT_SECRET: qVB2taQhqWmVndVIG5QR1INH8rfsbTrS
      AUTH_SERVER_PATHS_TOKEN_PATH: "/realms/CredentialIssuer/protocol/openid-connect/token"
      AUTH_SERVER_CLIENT_USERNAME: "user"
      AUTH_SERVER_CLIENT_PASSWORD: "user"
      ISSUER_UI_EXTERNAL_DOMAIN: http://localhost:4201
      UI_INTERNAL_DOMAIN: http://localhost:4201
    ports:
      - "8082:8080"
    extra_hosts:
      - "dome.saas.local:172.23.0.100"
    networks:
      - dome-saas-network

  issuer-postgres:
    image: postgres:latest
    restart: unless-stopped
    environment:
      POSTGRES_DB: issuer
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5434:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/issuer-api-data
    extra_hosts:
      - "dome.saas.local:172.23.0.100"
    networks:
      - dome-saas-network

# ::::::::::::::::::::::::: WALLET :::::::::::::::::::::::::

  wallet-keycloak:
   image: in2workspace/dome-wallet-keycloak:v0.1.0
   environment:
     KEYCLOAK_ADMIN: "admin"
     KEYCLOAK_ADMIN_PASSWORD: "admin"
     KC_DB: "postgres"
     KC_DB_URL: "jdbc:postgresql://wallet-keycloak-postgres/keycloak"
     KC_DB_URL_PORT: "5433"
     KC_DB_USERNAME: "postgres"
     KC_DB_PASSWORD: "postgres"
   ports:
     - "9099:8080"
   networks:
    - dome-saas-network

  wallet-keycloak-postgres:
   image: postgres:latest
   restart: unless-stopped
   environment:
     POSTGRES_DB: "keycloak"
     POSTGRES_USER: "postgres"
     POSTGRES_PASSWORD: "postgres"
   ports:
     - '5435:5432'
   volumes:
     - postgres_data:/var/lib/postgresql/wallet-keycloak-data
   networks:
    - dome-saas-network

  curl:
    image: alpine:latest # Use the custom image if you built one
    container_name: curl_service
    command: ["sh", "-c", "apk add curl & echo '172.23.0.100 dome.saas.local' >> /etc/hosts & while true; do sleep 1000; done"]
    tty: true 
    networks:
      - dome-saas-network

volumes:
  postgres_data:
  keycloak_postgres_data:
  vault_data:
  postgis_data:

#Specify the network these containers will run on
networks:
  dome-saas-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.23.0.0/16

