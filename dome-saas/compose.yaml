services:

# ::::::::::::::::::::::::: NGINX :::::::::::::::::::::::::

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ../dome-saas/nginx.conf:/etc/nginx/nginx.conf
      - ../dome-saas/certs:/etc/nginx/certs
      - ../dome-saas/html:/usr/share/nginx/html

# ::::::::::::::::::::::::: ISSUER :::::::::::::::::::::::::

  issuer-keycloak:
    image: in2workspace/issuer-keycloak-plugin:v1.1.0-SNAPSHOT
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_HOSTNAME_URL: http://localhost:8081
      KC_HOSTNAME_ADMIN_URL: http://localhost:8081
      KC_DB: postgres
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: postgres
      KC_DB_URL: jdbc:postgresql://issuer-keycloak-postgres/cred
      DB_PORT: 5432
#      KC_INTERNAL_URL: http://issuer-keycloak:8080
#      KC_EXTERNAL_URL: http://localhost:8081
      ISSUER_API_URL: http://issuer-api:8080
      # ISSUER_API_URL: http://host.docker.internal:8082
      # ISSUER_API_EXTERNAL_URL: http://localhost
      ISSUER_API_EXTERNAL_URL: http://localhost
      PRE_AUTH_LIFESPAN: 10 # required?
      PRE_AUTH_LIFESPAN_TIME_UNIT: MINUTES # required?
      TX_CODE_SIZE: 4 # required?
      TX_CODE_DESCRIPTION: Enter the PIN code # required?
      TOKEN_EXPIRATION: 2592000 # required?
    ports:
      - "8081:8080"

  issuer-keycloak-postgres:
    image: postgres:latest
    restart: unless-stopped
    environment:
      POSTGRES_DB: cred
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  issuer-ui:
    image: in2workspace/credential-issuer-ui:v1.1.0-SNAPSHOT
    ports:
      - "4201:8088" # 8088?

  issuer-api:
    image: in2workspace/issuer-api:v0.6.0-SNAPSHOT
    environment:
      SPRING_ACTIVE_PROFILES: default
      SPRING_R2DBC_URL: r2dbc:postgresql://issuer-postgres:5432/issuer
      SPRING_R2DBC_USERNAME: postgres
      SPRING_R2DBC_PASSWORD: postgres
      SPRING_FLYWAY_URL: jdbc:postgresql://issuer-postgres:5432/issuer
      SPRING_MAIL_HOST: host.docker.internal
      SPRING_MAIL_PORT: 1025
      API_EXTERNAL_DOMAIN: http://localhost
      API_INTERNAL_DOMAIN: http://issuer-api:8080
      API_CONFIG_SOURCE: yaml
      API_CACHE_LIFETIME_CREDENTIAL_OFFER: 10
      API_CACHE_LIFETIME_VERIFIABLE_CREDENTIAL: 10
      AUTH_SERVER_PROVIDER: keycloak
      AUTH_SERVER_EXTERNAL_DOMAIN: http://localhost:8081
      AUTH_SERVER_INTERNAL_DOMAIN: http://issuer-keycloak:8080
      AUTH_SERVER_REALM: CredentialIssuer
      AUTH_SERVER_CLIENT_CLIENT_ID: oidc4vci-wallet-client
      AUTH_SERVER_CLIENT_CLIENT_SECRET: qVB2taQhqWmVndVIG5QR1INH8rfsbTrS
      AUTH_SERVER_PATHS_TOKEN_PATH: "/realms/CredentialIssuer/protocol/openid-connect/token"
      UI_EXTERNAL_DOMAIN: http://localhost:4201
      UI_INTERNAL_DOMAIN: http://localhost:4201
      AUTH_SERVER_CLIENT_USERNAME: "user"
      AUTH_SERVER_CLIENT_PASSWORD: "user"
    ports:
      - "8082:8080"

  issuer-postgres:
    image: postgres:latest
    restart: unless-stopped
    environment:
      POSTGRES_DB: issuer
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5434:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data2

# ::::::::::::::::::::::::: WALLET :::::::::::::::::::::::::

  wallet-keycloak:
    image: in2workspace/dome-wallet-keycloak:v0.1.0
    environment:
      KEYCLOAK_ADMIN: "admin"
      KEYCLOAK_ADMIN_PASSWORD: "admin"
      KC_DB: "postgres"
      KC_DB_URL: "jdbc:postgresql://wallet-keycloak-postgres/keycloak"
      KC_DB_URL_PORT: "5433"
      KC_DB_USERNAME: "postgres"
      KC_DB_PASSWORD: "postgres"
    ports:
      - "9099:8080"
    links:
      - wallet-keycloak-postgres

  wallet-keycloak-postgres:
    image: postgres:latest
    restart: unless-stopped
    environment:
      POSTGRES_DB: "keycloak"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
    ports:
      - '5435:5432'
    volumes:
      - keycloak-postgres-data:/var/lib/postgresql/data

  wallet-ui:
    image: in2workspace/wallet-ui:v1.2.0-SNAPSHOT
    ports:
      - "4200:8080"
    environment:
      SERVER_URL: "http://localhost:8080"
      IAM_URL: "http://localhost:9099"
      IAM_URI: "/realms/wallet"
      EXECCONT_URI: "/api/v1/execute-content"
      VP_URI: "/api/v1/vp"
      CRED_URI: "/api/v1/credentials"
      CREDID_URI: "/api/v1/credentials?credentialId="
      USER_URI: "/api/v1/users"
      WEBSOCKET_URL: "ws://localhost:8080"
      WEBSOCKET_URI: "/api/v1/pin"
      REQCRED_URI: "/api/v1/request-credential"


  wallet-api:
    image: in2workspace/wallet-api:v1.2.0-SNAPSHOT
    environment:
      # Logging Configuration
      LOGGING_LEVEL_ES_IN2_WALLET_SERVER: "DEBUG"
      WALLET_WDA_URLS_SCHEMA: "http"
      WALLET_WDA_URLS_DOMAIN: "localhost"
      WALLET_WDA_URLS_PORT: "4200"
      
      # Security
      AUTH_SERVER_EXTERNAL_URL_SCHEMA: "http"
      AUTH_SERVER_EXTERNAL_URL_DOMAIN: "localhost"
      AUTH_SERVER_EXTERNAL_URL_PORT: "9099"
      AUTH_SERVER_EXTERNAL_URL_PATH: "/realms/wallet"

      AUTH_SERVER_INTERNAL_URL_SCHEMA: "http"
      AUTH_SERVER_INTERNAL_URL_DOMAIN: "wallet-keycloak"
      AUTH_SERVER_INTERNAL_URL_PORT: "8080"
      AUTH_SERVER_INTERNAL_URL_PATH: "/realms/wallet"

      AUTH_SERVER_JWT_DECODER_PATH: "/protocol/openid-connect/certs"
      #IDP
      EBSI_TEST_URL: "http://wallet-keycloak:8080/realms/wallet/protocol/openid-connect/token"
      EBSI_TEST_CLIENT_SECRET: ""
      EBSI_TEST_CLIENT_ID: "user-registry-client"
      EBSI_TEST_USERNAME: "admin"
      EBSI_TEST_PASSWORD: "adminPass"
      #BROKER
      BROKER_PROVIDER: "scorpio"
      BROKER_EXTERNAL_URL_DOMAIN: "scorpio"
      BROKER_INTERNAL_URL_DOMAIN: "scorpio"
      BROKER_PATHS_ENTITIES: "/ngsi-ld/v1/entities"
      # VAULT
      VAULT_PROVIDER_NAME: "hashicorp"
      HASHICORP_VAULT_HOST: "vault"
      HASHICORP_VAULT_TOKEN: ""
      HASHICORP_VAULT_SCHEME: "http"
      HASHICORP_VAULT_PORT: "8201"
    ports:
      - "8080:8080"

  vault:
    image: hashicorp/vault:latest
    container_name: vault
    ports:
      - "8201:8201"
    volumes:
      - VAULT_LOGS:/vault/logs
      - VAULT_FILE:/vault/file
      - ../dome-saas/vault/init.sh:/vault/init.sh
      - ../dome-saas/vault/config.json:/vault/config/config.json
    cap_add:
      - IPC_LOCK
    command: /bin/sh /vault/init.sh

  scorpio:
    image: scorpiobroker/all-in-one-runner:java-latest
    depends_on:
    - scorpio-postgres
    ports:
      - "9090:9090"
    environment:
      DBHOST: scorpio-postgres
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9090/health"]
      interval: 30s
      timeout: 15s
      retries: 5
 
  scorpio-postgres:
    image: postgis/postgis
    environment:
      POSTGRES_USER: ngb
      POSTGRES_PASSWORD: ngb
      POSTGRES_DB: ngb
    logging:
      driver: none
    ports:
      - "5434"
    volumes:
      - postgis-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ngb -d ngb"]
      interval: 20s
      timeout: 10s
      retries: 5

volumes:
  postgres_data:
  keycloak-postgres-data:
  VAULT_LOGS:
  VAULT_FILE:
  postgis-data: